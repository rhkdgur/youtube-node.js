{"ast":null,"code":"import _toArray from 'babel-runtime/helpers/toArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport classes from 'component-classes';\nimport raf from 'raf';\nimport { getStyleValue, cloneProps, getTransitionName, supportTransition, animationEndName, transitionEndName } from './util';\nvar clonePropList = ['appeared', 'show', 'exclusive', 'children', 'animation'];\n\n/**\n * AnimateChild only accept one child node.\n * `transitionSupport` is used for none transition test case.\n * Default we use browser transition event support check.\n */\nexport function genAnimateChild(transitionSupport) {\n  var AnimateChild = function (_React$Component) {\n    _inherits(AnimateChild, _React$Component);\n    function AnimateChild() {\n      _classCallCheck(this, AnimateChild);\n\n      // [Legacy] Since old code addListener on the element.\n      // To avoid break the behaviour that component not handle animation/transition\n      // also can handle the animate, let keep the logic.\n      var _this = _possibleConstructorReturn(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).call(this));\n      _this.state = {\n        child: null,\n        eventQueue: [],\n        eventActive: false\n      };\n      _this.onDomUpdated = function () {\n        var eventActive = _this.state.eventActive;\n        var _this$props = _this.props,\n          transitionName = _this$props.transitionName,\n          animation = _this$props.animation,\n          onChildLeaved = _this$props.onChildLeaved,\n          animateKey = _this$props.animateKey;\n        var $ele = _this.getDomElement();\n\n        // Skip if dom element not ready\n        if (!$ele) return;\n\n        // [Legacy] Add animation/transition event by dom level\n        if (transitionSupport && _this.$prevEle !== $ele) {\n          _this.cleanDomEvent();\n          _this.$prevEle = $ele;\n          _this.$prevEle.addEventListener(animationEndName, _this.onMotionEnd);\n          _this.$prevEle.addEventListener(transitionEndName, _this.onMotionEnd);\n        }\n        var currentEvent = _this.getCurrentEvent();\n        if (currentEvent.empty) {\n          // Additional process the leave event\n          if (currentEvent.lastEventType === 'leave') {\n            onChildLeaved(animateKey);\n          }\n          return;\n        }\n        var eventType = currentEvent.eventType,\n          restQueue = currentEvent.restQueue;\n        var nodeClasses = classes($ele);\n\n        // [Legacy] Since origin code use js to set `className`.\n        // This caused that any component without support `className` can be forced set.\n        // Let's keep the logic.\n        function legacyAppendClass() {\n          if (!transitionSupport) return;\n          var basicClassName = getTransitionName(transitionName, '' + eventType);\n          if (basicClassName) nodeClasses.add(basicClassName);\n          if (eventActive) {\n            var activeClassName = getTransitionName(transitionName, eventType + '-active');\n            if (activeClassName) nodeClasses.add(activeClassName);\n          }\n        }\n        if (_this.currentEvent && _this.currentEvent.type === eventType) {\n          legacyAppendClass();\n          return;\n        }\n\n        // Clear timeout for legacy check\n        clearTimeout(_this.timeout);\n\n        // Clean up last event environment\n        if (_this.currentEvent && _this.currentEvent.animateObj && _this.currentEvent.animateObj.stop) {\n          _this.currentEvent.animateObj.stop();\n        }\n\n        // Clean up last transition class\n        if (_this.currentEvent) {\n          var basicClassName = getTransitionName(transitionName, '' + _this.currentEvent.type);\n          var activeClassName = getTransitionName(transitionName, _this.currentEvent.type + '-active');\n          if (basicClassName) nodeClasses.remove(basicClassName);\n          if (activeClassName) nodeClasses.remove(activeClassName);\n        }\n\n        // New event come\n        _this.currentEvent = {\n          type: eventType\n        };\n        var animationHandler = (animation || {})[eventType];\n        // =============== Check if has customize animation ===============\n        if (animationHandler) {\n          _this.currentEvent.animateObj = animationHandler($ele, function () {\n            _this.onMotionEnd({\n              target: $ele\n            });\n          });\n\n          // Do next step if not animate object provided\n          if (!_this.currentEvent || !_this.currentEvent.animateObj) {\n            _this.nextEvent(restQueue);\n          }\n\n          // ==================== Use transition instead ====================\n        } else if (transitionSupport) {\n          legacyAppendClass();\n          if (!eventActive) {\n            // Trigger `eventActive` in next frame\n            raf(function () {\n              if (_this.currentEvent && _this.currentEvent.type === eventType && !_this._destroy) {\n                _this.setState({\n                  eventActive: true\n                }, function () {\n                  // [Legacy] Handle timeout if browser transition event not handle\n                  var transitionDelay = getStyleValue($ele, 'transition-delay') || 0;\n                  var transitionDuration = getStyleValue($ele, 'transition-duration') || 0;\n                  var animationDelay = getStyleValue($ele, 'animation-delay') || 0;\n                  var animationDuration = getStyleValue($ele, 'animation-duration') || 0;\n                  var totalTime = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);\n                  if (totalTime >= 0) {\n                    _this.timeout = setTimeout(function () {\n                      _this.onMotionEnd({\n                        target: $ele\n                      });\n                    }, totalTime * 1000);\n                  }\n                });\n              }\n            });\n          }\n\n          // ======================= Just next action =======================\n        } else {\n          _this.onMotionEnd({\n            target: $ele\n          });\n        }\n      };\n      _this.onMotionEnd = function (_ref) {\n        var target = _ref.target;\n        var _this$props2 = _this.props,\n          transitionName = _this$props2.transitionName,\n          onChildLeaved = _this$props2.onChildLeaved,\n          animateKey = _this$props2.animateKey,\n          onAppear = _this$props2.onAppear,\n          onEnter = _this$props2.onEnter,\n          onLeave = _this$props2.onLeave,\n          onEnd = _this$props2.onEnd;\n        var currentEvent = _this.getCurrentEvent();\n        if (currentEvent.empty) return;\n\n        // Clear timeout for legacy check\n        clearTimeout(_this.timeout);\n        var restQueue = currentEvent.restQueue;\n        var $ele = _this.getDomElement();\n        if (!_this.currentEvent || $ele !== target) return;\n        if (_this.currentEvent.animateObj && _this.currentEvent.animateObj.stop) {\n          _this.currentEvent.animateObj.stop();\n        }\n\n        // [Legacy] Same as above, we need call js to remove the class\n        if (transitionSupport && _this.currentEvent) {\n          var basicClassName = getTransitionName(transitionName, _this.currentEvent.type);\n          var activeClassName = getTransitionName(transitionName, _this.currentEvent.type + '-active');\n          var nodeClasses = classes($ele);\n          if (basicClassName) nodeClasses.remove(basicClassName);\n          if (activeClassName) nodeClasses.remove(activeClassName);\n        }\n\n        // Additional process the leave event\n        if (_this.currentEvent && _this.currentEvent.type === 'leave') {\n          onChildLeaved(animateKey);\n        }\n\n        // [Legacy] Trigger on event when it's last event\n        if (_this.currentEvent && !restQueue.length) {\n          if (_this.currentEvent.type === 'appear' && onAppear) {\n            onAppear(animateKey);\n          } else if (_this.currentEvent.type === 'enter' && onEnter) {\n            onEnter(animateKey);\n          } else if (_this.currentEvent.type === 'leave' && onLeave) {\n            onLeave(animateKey);\n          }\n          if (onEnd) {\n            // OnEnd(key, isShow)\n            onEnd(animateKey, _this.currentEvent.type !== 'leave');\n          }\n        }\n        _this.currentEvent = null;\n\n        // Next queue\n        _this.nextEvent(restQueue);\n      };\n      _this.getDomElement = function () {\n        if (_this._destroy) return null;\n        return ReactDOM.findDOMNode(_this);\n      };\n      _this.getCurrentEvent = function () {\n        var _this$state$eventQueu = _this.state.eventQueue,\n          eventQueue = _this$state$eventQueu === undefined ? [] : _this$state$eventQueu;\n        var _this$props3 = _this.props,\n          animation = _this$props3.animation,\n          exclusive = _this$props3.exclusive,\n          transitionAppear = _this$props3.transitionAppear,\n          transitionEnter = _this$props3.transitionEnter,\n          transitionLeave = _this$props3.transitionLeave;\n        function hasEventHandler(eventType) {\n          return eventType === 'appear' && (transitionAppear || animation.appear) || eventType === 'enter' && (transitionEnter || animation.enter) || eventType === 'leave' && (transitionLeave || animation.leave);\n        }\n        var event = null;\n        // If is exclusive, only check the last event\n        if (exclusive) {\n          var eventType = eventQueue[eventQueue.length - 1];\n          if (hasEventHandler(eventType)) {\n            event = {\n              eventType: eventType,\n              restQueue: []\n            };\n          }\n        } else {\n          // Loop check the queue until find match\n          var cloneQueue = eventQueue.slice();\n          while (cloneQueue.length) {\n            var _cloneQueue = cloneQueue,\n              _cloneQueue2 = _toArray(_cloneQueue),\n              _eventType = _cloneQueue2[0],\n              restQueue = _cloneQueue2.slice(1);\n            if (hasEventHandler(_eventType)) {\n              event = {\n                eventType: _eventType,\n                restQueue: restQueue\n              };\n              break;\n            }\n            cloneQueue = restQueue;\n          }\n        }\n        if (!event) {\n          event = {\n            empty: true,\n            lastEventType: eventQueue[eventQueue.length - 1]\n          };\n        }\n        return event;\n      };\n      _this.nextEvent = function (restQueue) {\n        // Next queue\n        if (!_this._destroy) {\n          _this.setState({\n            eventQueue: restQueue,\n            eventActive: false\n          });\n        }\n      };\n      _this.cleanDomEvent = function () {\n        if (_this.$prevEle && transitionSupport) {\n          _this.$prevEle.removeEventListener(animationEndName, _this.onMotionEnd);\n          _this.$prevEle.removeEventListener(transitionEndName, _this.onMotionEnd);\n        }\n      };\n      _this.$prevEle = null;\n      _this.currentEvent = null;\n      _this.timeout = null;\n      return _this;\n    }\n    _createClass(AnimateChild, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.onDomUpdated();\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        this.onDomUpdated();\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        clearTimeout(this.timeout);\n        this._destroy = true;\n        this.cleanDomEvent();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _state = this.state,\n          child = _state.child,\n          eventActive = _state.eventActive;\n        var _props = this.props,\n          showProp = _props.showProp,\n          transitionName = _props.transitionName;\n        var _ref2 = child.props || {},\n          className = _ref2.className;\n        var currentEvent = this.getCurrentEvent();\n\n        // Class name\n        var connectClassName = transitionSupport && this.currentEvent ? classNames(className, getTransitionName(transitionName, this.currentEvent.type), eventActive && getTransitionName(transitionName, this.currentEvent.type + '-active')) : className;\n        var show = true;\n\n        // Keep show when is in transition or has customize animate\n        if (transitionSupport && (!currentEvent.empty || this.currentEvent && this.currentEvent.animateObj)) {\n          show = true;\n        } else {\n          show = child.props[showProp];\n        }\n\n        // Clone child\n        var newChildProps = {\n          className: connectClassName\n        };\n        if (showProp) {\n          newChildProps[showProp] = show;\n        }\n        return React.cloneElement(child, newChildProps);\n      }\n    }], [{\n      key: 'getDerivedStateFromProps',\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var _prevState$prevProps = prevState.prevProps,\n          prevProps = _prevState$prevProps === undefined ? {} : _prevState$prevProps;\n        var appeared = nextProps.appeared;\n        var newState = {\n          prevProps: cloneProps(nextProps, clonePropList)\n        };\n        function processState(propName, updater) {\n          if (prevProps[propName] !== nextProps[propName]) {\n            if (updater) {\n              updater(nextProps[propName]);\n            }\n            return true;\n          }\n          return false;\n        }\n        function pushEvent(eventType) {\n          var eventQueue = newState.eventQueue || prevState.eventQueue.slice();\n          var matchIndex = eventQueue.indexOf(eventType);\n\n          // Clean the rest event if eventType match\n          if (matchIndex !== -1) {\n            eventQueue = eventQueue.slice(0, matchIndex);\n          }\n          eventQueue.push(eventType);\n          newState.eventQueue = eventQueue;\n        }\n\n        // Child update. Only set child.\n        processState('children', function (child) {\n          newState.child = child;\n        });\n        processState('appeared', function (isAppeared) {\n          if (isAppeared) {\n            pushEvent('appear');\n          }\n        });\n\n        // Show update\n        processState('show', function (show) {\n          if (!appeared) {\n            if (show) {\n              pushEvent('enter');\n            } else {\n              pushEvent('leave');\n            }\n          }\n        });\n        return newState;\n      }\n    }]);\n    return AnimateChild;\n  }(React.Component);\n  AnimateChild.propTypes = {\n    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    transitionAppear: PropTypes.bool,\n    transitionEnter: PropTypes.bool,\n    transitionLeave: PropTypes.bool,\n    exclusive: PropTypes.bool,\n    appeared: PropTypes.bool,\n    showProp: PropTypes.string,\n    animateKey: PropTypes.any,\n    animation: PropTypes.object,\n    onChildLeaved: PropTypes.func,\n    onEnd: PropTypes.func,\n    onAppear: PropTypes.func,\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func\n  };\n  polyfill(AnimateChild);\n  return AnimateChild;\n}\nexport default genAnimateChild(supportTransition);","map":{"version":3,"names":["_toArray","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","ReactDOM","PropTypes","polyfill","classNames","classes","raf","getStyleValue","cloneProps","getTransitionName","supportTransition","animationEndName","transitionEndName","clonePropList","genAnimateChild","transitionSupport","AnimateChild","_React$Component","_this","__proto__","Object","getPrototypeOf","call","state","child","eventQueue","eventActive","onDomUpdated","_this$props","props","transitionName","animation","onChildLeaved","animateKey","$ele","getDomElement","$prevEle","cleanDomEvent","addEventListener","onMotionEnd","currentEvent","getCurrentEvent","empty","lastEventType","eventType","restQueue","nodeClasses","legacyAppendClass","basicClassName","add","activeClassName","type","clearTimeout","timeout","animateObj","stop","remove","animationHandler","target","nextEvent","_destroy","setState","transitionDelay","transitionDuration","animationDelay","animationDuration","totalTime","Math","max","setTimeout","_ref","_this$props2","onAppear","onEnter","onLeave","onEnd","length","findDOMNode","_this$state$eventQueu","undefined","_this$props3","exclusive","transitionAppear","transitionEnter","transitionLeave","hasEventHandler","appear","enter","leave","event","cloneQueue","slice","_cloneQueue","_cloneQueue2","_eventType","removeEventListener","key","value","componentDidMount","componentDidUpdate","componentWillUnmount","render","_state","_props","showProp","_ref2","className","connectClassName","show","newChildProps","cloneElement","getDerivedStateFromProps","nextProps","prevState","_prevState$prevProps","prevProps","appeared","newState","processState","propName","updater","pushEvent","matchIndex","indexOf","push","isAppeared","Component","propTypes","oneOfType","string","object","bool","any","func"],"sources":["/Users/GAMJA/Desktop/nodejs프로젝트/boilerplate-mern-stack-master/client/node_modules/rc-tree-select/node_modules/rc-trigger/node_modules/rc-animate/es/AnimateChild.js"],"sourcesContent":["import _toArray from 'babel-runtime/helpers/toArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport classes from 'component-classes';\nimport raf from 'raf';\n\nimport { getStyleValue, cloneProps, getTransitionName, supportTransition, animationEndName, transitionEndName } from './util';\n\nvar clonePropList = ['appeared', 'show', 'exclusive', 'children', 'animation'];\n\n/**\n * AnimateChild only accept one child node.\n * `transitionSupport` is used for none transition test case.\n * Default we use browser transition event support check.\n */\nexport function genAnimateChild(transitionSupport) {\n  var AnimateChild = function (_React$Component) {\n    _inherits(AnimateChild, _React$Component);\n\n    function AnimateChild() {\n      _classCallCheck(this, AnimateChild);\n\n      // [Legacy] Since old code addListener on the element.\n      // To avoid break the behaviour that component not handle animation/transition\n      // also can handle the animate, let keep the logic.\n      var _this = _possibleConstructorReturn(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).call(this));\n\n      _this.state = {\n        child: null,\n\n        eventQueue: [],\n        eventActive: false\n      };\n\n      _this.onDomUpdated = function () {\n        var eventActive = _this.state.eventActive;\n        var _this$props = _this.props,\n            transitionName = _this$props.transitionName,\n            animation = _this$props.animation,\n            onChildLeaved = _this$props.onChildLeaved,\n            animateKey = _this$props.animateKey;\n\n\n        var $ele = _this.getDomElement();\n\n        // Skip if dom element not ready\n        if (!$ele) return;\n\n        // [Legacy] Add animation/transition event by dom level\n        if (transitionSupport && _this.$prevEle !== $ele) {\n          _this.cleanDomEvent();\n\n          _this.$prevEle = $ele;\n          _this.$prevEle.addEventListener(animationEndName, _this.onMotionEnd);\n          _this.$prevEle.addEventListener(transitionEndName, _this.onMotionEnd);\n        }\n\n        var currentEvent = _this.getCurrentEvent();\n        if (currentEvent.empty) {\n          // Additional process the leave event\n          if (currentEvent.lastEventType === 'leave') {\n            onChildLeaved(animateKey);\n          }\n          return;\n        }\n\n        var eventType = currentEvent.eventType,\n            restQueue = currentEvent.restQueue;\n\n        var nodeClasses = classes($ele);\n\n        // [Legacy] Since origin code use js to set `className`.\n        // This caused that any component without support `className` can be forced set.\n        // Let's keep the logic.\n        function legacyAppendClass() {\n          if (!transitionSupport) return;\n\n          var basicClassName = getTransitionName(transitionName, '' + eventType);\n          if (basicClassName) nodeClasses.add(basicClassName);\n\n          if (eventActive) {\n            var activeClassName = getTransitionName(transitionName, eventType + '-active');\n            if (activeClassName) nodeClasses.add(activeClassName);\n          }\n        }\n\n        if (_this.currentEvent && _this.currentEvent.type === eventType) {\n          legacyAppendClass();\n          return;\n        }\n\n        // Clear timeout for legacy check\n        clearTimeout(_this.timeout);\n\n        // Clean up last event environment\n        if (_this.currentEvent && _this.currentEvent.animateObj && _this.currentEvent.animateObj.stop) {\n          _this.currentEvent.animateObj.stop();\n        }\n\n        // Clean up last transition class\n        if (_this.currentEvent) {\n          var basicClassName = getTransitionName(transitionName, '' + _this.currentEvent.type);\n          var activeClassName = getTransitionName(transitionName, _this.currentEvent.type + '-active');\n          if (basicClassName) nodeClasses.remove(basicClassName);\n          if (activeClassName) nodeClasses.remove(activeClassName);\n        }\n\n        // New event come\n        _this.currentEvent = {\n          type: eventType\n        };\n\n        var animationHandler = (animation || {})[eventType];\n        // =============== Check if has customize animation ===============\n        if (animationHandler) {\n          _this.currentEvent.animateObj = animationHandler($ele, function () {\n            _this.onMotionEnd({ target: $ele });\n          });\n\n          // Do next step if not animate object provided\n          if (!_this.currentEvent || !_this.currentEvent.animateObj) {\n            _this.nextEvent(restQueue);\n          }\n\n          // ==================== Use transition instead ====================\n        } else if (transitionSupport) {\n          legacyAppendClass();\n          if (!eventActive) {\n            // Trigger `eventActive` in next frame\n            raf(function () {\n              if (_this.currentEvent && _this.currentEvent.type === eventType && !_this._destroy) {\n                _this.setState({ eventActive: true }, function () {\n                  // [Legacy] Handle timeout if browser transition event not handle\n                  var transitionDelay = getStyleValue($ele, 'transition-delay') || 0;\n                  var transitionDuration = getStyleValue($ele, 'transition-duration') || 0;\n                  var animationDelay = getStyleValue($ele, 'animation-delay') || 0;\n                  var animationDuration = getStyleValue($ele, 'animation-duration') || 0;\n                  var totalTime = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);\n\n                  if (totalTime >= 0) {\n                    _this.timeout = setTimeout(function () {\n                      _this.onMotionEnd({ target: $ele });\n                    }, totalTime * 1000);\n                  }\n                });\n              }\n            });\n          }\n\n          // ======================= Just next action =======================\n        } else {\n          _this.onMotionEnd({ target: $ele });\n        }\n      };\n\n      _this.onMotionEnd = function (_ref) {\n        var target = _ref.target;\n        var _this$props2 = _this.props,\n            transitionName = _this$props2.transitionName,\n            onChildLeaved = _this$props2.onChildLeaved,\n            animateKey = _this$props2.animateKey,\n            onAppear = _this$props2.onAppear,\n            onEnter = _this$props2.onEnter,\n            onLeave = _this$props2.onLeave,\n            onEnd = _this$props2.onEnd;\n\n        var currentEvent = _this.getCurrentEvent();\n        if (currentEvent.empty) return;\n\n        // Clear timeout for legacy check\n        clearTimeout(_this.timeout);\n\n        var restQueue = currentEvent.restQueue;\n\n\n        var $ele = _this.getDomElement();\n        if (!_this.currentEvent || $ele !== target) return;\n\n        if (_this.currentEvent.animateObj && _this.currentEvent.animateObj.stop) {\n          _this.currentEvent.animateObj.stop();\n        }\n\n        // [Legacy] Same as above, we need call js to remove the class\n        if (transitionSupport && _this.currentEvent) {\n          var basicClassName = getTransitionName(transitionName, _this.currentEvent.type);\n          var activeClassName = getTransitionName(transitionName, _this.currentEvent.type + '-active');\n\n          var nodeClasses = classes($ele);\n          if (basicClassName) nodeClasses.remove(basicClassName);\n          if (activeClassName) nodeClasses.remove(activeClassName);\n        }\n\n        // Additional process the leave event\n        if (_this.currentEvent && _this.currentEvent.type === 'leave') {\n          onChildLeaved(animateKey);\n        }\n\n        // [Legacy] Trigger on event when it's last event\n        if (_this.currentEvent && !restQueue.length) {\n          if (_this.currentEvent.type === 'appear' && onAppear) {\n            onAppear(animateKey);\n          } else if (_this.currentEvent.type === 'enter' && onEnter) {\n            onEnter(animateKey);\n          } else if (_this.currentEvent.type === 'leave' && onLeave) {\n            onLeave(animateKey);\n          }\n\n          if (onEnd) {\n            // OnEnd(key, isShow)\n            onEnd(animateKey, _this.currentEvent.type !== 'leave');\n          }\n        }\n\n        _this.currentEvent = null;\n\n        // Next queue\n        _this.nextEvent(restQueue);\n      };\n\n      _this.getDomElement = function () {\n        if (_this._destroy) return null;\n        return ReactDOM.findDOMNode(_this);\n      };\n\n      _this.getCurrentEvent = function () {\n        var _this$state$eventQueu = _this.state.eventQueue,\n            eventQueue = _this$state$eventQueu === undefined ? [] : _this$state$eventQueu;\n        var _this$props3 = _this.props,\n            animation = _this$props3.animation,\n            exclusive = _this$props3.exclusive,\n            transitionAppear = _this$props3.transitionAppear,\n            transitionEnter = _this$props3.transitionEnter,\n            transitionLeave = _this$props3.transitionLeave;\n\n\n        function hasEventHandler(eventType) {\n          return eventType === 'appear' && (transitionAppear || animation.appear) || eventType === 'enter' && (transitionEnter || animation.enter) || eventType === 'leave' && (transitionLeave || animation.leave);\n        }\n\n        var event = null;\n        // If is exclusive, only check the last event\n        if (exclusive) {\n          var eventType = eventQueue[eventQueue.length - 1];\n          if (hasEventHandler(eventType)) {\n            event = {\n              eventType: eventType,\n              restQueue: []\n            };\n          }\n        } else {\n          // Loop check the queue until find match\n          var cloneQueue = eventQueue.slice();\n          while (cloneQueue.length) {\n            var _cloneQueue = cloneQueue,\n                _cloneQueue2 = _toArray(_cloneQueue),\n                _eventType = _cloneQueue2[0],\n                restQueue = _cloneQueue2.slice(1);\n\n            if (hasEventHandler(_eventType)) {\n              event = {\n                eventType: _eventType,\n                restQueue: restQueue\n              };\n              break;\n            }\n            cloneQueue = restQueue;\n          }\n        }\n\n        if (!event) {\n          event = {\n            empty: true,\n            lastEventType: eventQueue[eventQueue.length - 1]\n          };\n        }\n\n        return event;\n      };\n\n      _this.nextEvent = function (restQueue) {\n        // Next queue\n        if (!_this._destroy) {\n          _this.setState({\n            eventQueue: restQueue,\n            eventActive: false\n          });\n        }\n      };\n\n      _this.cleanDomEvent = function () {\n        if (_this.$prevEle && transitionSupport) {\n          _this.$prevEle.removeEventListener(animationEndName, _this.onMotionEnd);\n          _this.$prevEle.removeEventListener(transitionEndName, _this.onMotionEnd);\n        }\n      };\n\n      _this.$prevEle = null;\n\n      _this.currentEvent = null;\n      _this.timeout = null;\n      return _this;\n    }\n\n    _createClass(AnimateChild, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.onDomUpdated();\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        this.onDomUpdated();\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        clearTimeout(this.timeout);\n        this._destroy = true;\n        this.cleanDomEvent();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _state = this.state,\n            child = _state.child,\n            eventActive = _state.eventActive;\n        var _props = this.props,\n            showProp = _props.showProp,\n            transitionName = _props.transitionName;\n\n        var _ref2 = child.props || {},\n            className = _ref2.className;\n\n        var currentEvent = this.getCurrentEvent();\n\n        // Class name\n        var connectClassName = transitionSupport && this.currentEvent ? classNames(className, getTransitionName(transitionName, this.currentEvent.type), eventActive && getTransitionName(transitionName, this.currentEvent.type + '-active')) : className;\n\n        var show = true;\n\n        // Keep show when is in transition or has customize animate\n        if (transitionSupport && (!currentEvent.empty || this.currentEvent && this.currentEvent.animateObj)) {\n          show = true;\n        } else {\n          show = child.props[showProp];\n        }\n\n        // Clone child\n        var newChildProps = {\n          className: connectClassName\n        };\n\n        if (showProp) {\n          newChildProps[showProp] = show;\n        }\n\n        return React.cloneElement(child, newChildProps);\n      }\n    }], [{\n      key: 'getDerivedStateFromProps',\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var _prevState$prevProps = prevState.prevProps,\n            prevProps = _prevState$prevProps === undefined ? {} : _prevState$prevProps;\n        var appeared = nextProps.appeared;\n\n\n        var newState = {\n          prevProps: cloneProps(nextProps, clonePropList)\n        };\n\n        function processState(propName, updater) {\n          if (prevProps[propName] !== nextProps[propName]) {\n            if (updater) {\n              updater(nextProps[propName]);\n            }\n            return true;\n          }\n          return false;\n        }\n\n        function pushEvent(eventType) {\n          var eventQueue = newState.eventQueue || prevState.eventQueue.slice();\n          var matchIndex = eventQueue.indexOf(eventType);\n\n          // Clean the rest event if eventType match\n          if (matchIndex !== -1) {\n            eventQueue = eventQueue.slice(0, matchIndex);\n          }\n\n          eventQueue.push(eventType);\n          newState.eventQueue = eventQueue;\n        }\n\n        // Child update. Only set child.\n        processState('children', function (child) {\n          newState.child = child;\n        });\n\n        processState('appeared', function (isAppeared) {\n          if (isAppeared) {\n            pushEvent('appear');\n          }\n        });\n\n        // Show update\n        processState('show', function (show) {\n          if (!appeared) {\n            if (show) {\n              pushEvent('enter');\n            } else {\n              pushEvent('leave');\n            }\n          }\n        });\n\n        return newState;\n      }\n    }]);\n\n    return AnimateChild;\n  }(React.Component);\n\n  AnimateChild.propTypes = {\n    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    transitionAppear: PropTypes.bool,\n    transitionEnter: PropTypes.bool,\n    transitionLeave: PropTypes.bool,\n    exclusive: PropTypes.bool,\n    appeared: PropTypes.bool,\n    showProp: PropTypes.string,\n\n    animateKey: PropTypes.any,\n    animation: PropTypes.object,\n    onChildLeaved: PropTypes.func,\n\n    onEnd: PropTypes.func,\n    onAppear: PropTypes.func,\n    onEnter: PropTypes.func,\n    onLeave: PropTypes.func\n  };\n\n\n  polyfill(AnimateChild);\n\n  return AnimateChild;\n}\n\nexport default genAnimateChild(supportTransition);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}