{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n/* eslint-disable react/prefer-es6-class */\n/* eslint-disable prefer-promise-reject-errors */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport unsafeLifecyclesPolyfill from 'rc-util/es/unsafeLifecyclesPolyfill';\nimport AsyncValidator from 'async-validator';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport eq from 'lodash/eq';\nimport createFieldsStore from './createFieldsStore';\nimport { argumentContainer, identity, normalizeValidateRules, getValidateTriggers, getValueFromEvent, hasRules, getParams, isEmptyObject, flattenArray } from './utils';\nvar DEFAULT_TRIGGER = 'onChange';\nfunction createBaseForm() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mixins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var validateMessages = option.validateMessages,\n    onFieldsChange = option.onFieldsChange,\n    onValuesChange = option.onValuesChange,\n    _option$mapProps = option.mapProps,\n    mapProps = _option$mapProps === undefined ? identity : _option$mapProps,\n    mapPropsToFields = option.mapPropsToFields,\n    fieldNameProp = option.fieldNameProp,\n    fieldMetaProp = option.fieldMetaProp,\n    fieldDataProp = option.fieldDataProp,\n    _option$formPropName = option.formPropName,\n    formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName,\n    formName = option.name,\n    withRef = option.withRef;\n  return function decorate(WrappedComponent) {\n    var Form = createReactClass({\n      displayName: 'Form',\n      mixins: mixins,\n      getInitialState: function getInitialState() {\n        var _this = this;\n        var fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n        this.renderFields = {};\n        this.domFields = {};\n\n        // HACK: https://github.com/ant-design/ant-design/issues/6406\n        ['getFieldsValue', 'getFieldValue', 'setFieldsInitialValue', 'getFieldsError', 'getFieldError', 'isFieldValidating', 'isFieldsValidating', 'isFieldsTouched', 'isFieldTouched'].forEach(function (key) {\n          _this[key] = function () {\n            var _fieldsStore;\n            if (process.env.NODE_ENV !== 'production') {\n              warning(false, 'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n            }\n            return (_fieldsStore = _this.fieldsStore)[key].apply(_fieldsStore, arguments);\n          };\n        });\n        return {\n          submitting: false\n        };\n      },\n      componentDidMount: function componentDidMount() {\n        this.cleanUpUselessFields();\n      },\n      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n      componentDidUpdate: function componentDidUpdate() {\n        this.cleanUpUselessFields();\n      },\n      onCollectCommon: function onCollectCommon(name, action, args) {\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta[action]) {\n          fieldMeta[action].apply(fieldMeta, _toConsumableArray(args));\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          var _fieldMeta$originalPr;\n          (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _toConsumableArray(args));\n        }\n        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _toConsumableArray(args)) : getValueFromEvent.apply(undefined, _toConsumableArray(args));\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          var valuesAll = this.fieldsStore.getAllValues();\n          var valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(function (key) {\n            return set(valuesAllSet, key, valuesAll[key]);\n          });\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), set({}, name, value), valuesAllSet);\n        }\n        var field = this.fieldsStore.getField(name);\n        return {\n          name: name,\n          field: _extends({}, field, {\n            value: value,\n            touched: true\n          }),\n          fieldMeta: fieldMeta\n        };\n      },\n      onCollect: function onCollect(name_, action) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n        var _onCollectCommon = this.onCollectCommon(name_, action, args),\n          name = _onCollectCommon.name,\n          field = _onCollectCommon.field,\n          fieldMeta = _onCollectCommon.fieldMeta;\n        var validate = fieldMeta.validate;\n        this.fieldsStore.setFieldsAsDirty();\n        var newField = _extends({}, field, {\n          dirty: hasRules(validate)\n        });\n        this.setFields(_defineProperty({}, name, newField));\n      },\n      onCollectValidate: function onCollectValidate(name_, action) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n        var _onCollectCommon2 = this.onCollectCommon(name_, action, args),\n          field = _onCollectCommon2.field,\n          fieldMeta = _onCollectCommon2.fieldMeta;\n        var newField = _extends({}, field, {\n          dirty: true\n        });\n        this.fieldsStore.setFieldsAsDirty();\n        this.validateFieldsInternal([newField], {\n          action: action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst\n          }\n        });\n      },\n      getCacheBind: function getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n        var cache = this.cachedBind[name];\n        if (!cache[action] || cache[action].oriFn !== fn) {\n          cache[action] = {\n            fn: fn.bind(this, name, action),\n            oriFn: fn\n          };\n        }\n        return cache[action].fn;\n      },\n      getFieldDecorator: function getFieldDecorator(name, fieldOption) {\n        var _this2 = this;\n        var props = this.getFieldProps(name, fieldOption);\n        return function (fieldElem) {\n          // We should put field in record if it is rendered\n          _this2.renderFields[name] = true;\n          var fieldMeta = _this2.fieldsStore.getFieldMeta(name);\n          var originalProps = fieldElem.props;\n          if (process.env.NODE_ENV !== 'production') {\n            var valuePropName = fieldMeta.valuePropName;\n            warning(!(valuePropName in originalProps), '`getFieldDecorator` will override `' + valuePropName + '`, ' + ('so please don\\'t set `' + valuePropName + '` directly ') + 'and use `setFieldsValue` to set it.');\n            var defaultValuePropName = 'default' + valuePropName[0].toUpperCase() + valuePropName.slice(1);\n            warning(!(defaultValuePropName in originalProps), '`' + defaultValuePropName + '` is invalid ' + ('for `getFieldDecorator` will set `' + valuePropName + '`,') + ' please use `option.initialValue` instead.');\n          }\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          return React.cloneElement(fieldElem, _extends({}, props, _this2.fieldsStore.getFieldValuePropValue(fieldMeta)));\n        };\n      },\n      getFieldProps: function getFieldProps(name) {\n        var _this3 = this;\n        var usersFieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          warning(this.fieldsStore.isValidNestedFieldName(name), 'One field name cannot be part of another, e.g. `a` and `a.b`. Check field: ' + name);\n          warning(!('exclusive' in usersFieldOption), '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.');\n        }\n        delete this.clearedFieldMetaCache[name];\n        var fieldOption = _extends({\n          name: name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: []\n        }, usersFieldOption);\n        var rules = fieldOption.rules,\n          trigger = fieldOption.trigger,\n          _fieldOption$validate = fieldOption.validateTrigger,\n          validateTrigger = _fieldOption$validate === undefined ? trigger : _fieldOption$validate,\n          validate = fieldOption.validate;\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n        var inputProps = _extends({}, this.fieldsStore.getFieldValuePropValue(fieldOption), {\n          ref: this.getCacheBind(name, name + '__ref', this.saveRef)\n        });\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = formName ? formName + '_' + name : name;\n        }\n        var validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        var validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach(function (action) {\n          if (inputProps[action]) return;\n          inputProps[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);\n        });\n\n        // make sure that the value will be collect\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n        var meta = _extends({}, fieldMeta, fieldOption, {\n          validate: validateRules\n        });\n        this.fieldsStore.setFieldMeta(name, meta);\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        }\n\n        // This field is rendered, record it\n        this.renderFields[name] = true;\n        return inputProps;\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        return this.instances[name];\n      },\n      getRules: function getRules(fieldMeta, action) {\n        var actionRules = fieldMeta.validate.filter(function (item) {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map(function (item) {\n          return item.rules;\n        });\n        return flattenArray(actionRules);\n      },\n      setFields: function setFields(maybeNestedFields, callback) {\n        var _this4 = this;\n        var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n        if (onFieldsChange) {\n          var changedFields = Object.keys(fields).reduce(function (acc, name) {\n            return set(acc, name, _this4.fieldsStore.getField(name));\n          }, {});\n          onFieldsChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedFields, this.fieldsStore.getNestedAllFields());\n        }\n        this.forceUpdate(callback);\n      },\n      setFieldsValue: function setFieldsValue(changedValues, callback) {\n        var fieldsMeta = this.fieldsStore.fieldsMeta;\n        var values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        var newFields = Object.keys(values).reduce(function (acc, name) {\n          var isRegistered = fieldsMeta[name];\n          if (process.env.NODE_ENV !== 'production') {\n            warning(isRegistered, 'Cannot use `setFieldsValue` until ' + 'you use `getFieldDecorator` or `getFieldProps` to register it.');\n          }\n          if (isRegistered) {\n            var value = values[name];\n            acc[name] = {\n              value: value\n            };\n          }\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n        if (onValuesChange) {\n          var allValues = this.fieldsStore.getAllValues();\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedValues, allValues);\n        }\n      },\n      saveRef: function saveRef(name, _, component) {\n        if (!component) {\n          var _fieldMeta = this.fieldsStore.getFieldMeta(name);\n          if (!_fieldMeta.preserve) {\n            // after destroy, delete data\n            this.clearedFieldMetaCache[name] = {\n              field: this.fieldsStore.getField(name),\n              meta: _fieldMeta\n            };\n            this.clearField(name);\n          }\n          delete this.domFields[name];\n          return;\n        }\n        this.domFields[name] = true;\n        this.recoverClearedField(name);\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta) {\n          var ref = fieldMeta.ref;\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error('can not set ref string for ' + name);\n            } else if (typeof ref === 'function') {\n              ref(component);\n            } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n              ref.current = component;\n            }\n          }\n        }\n        this.instances[name] = component;\n      },\n      cleanUpUselessFields: function cleanUpUselessFields() {\n        var _this5 = this;\n        var fieldList = this.fieldsStore.getAllFieldsName();\n        var removedList = fieldList.filter(function (field) {\n          var fieldMeta = _this5.fieldsStore.getFieldMeta(field);\n          return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;\n        });\n        if (removedList.length) {\n          removedList.forEach(this.clearField);\n        }\n        this.renderFields = {};\n      },\n      clearField: function clearField(name) {\n        this.fieldsStore.clearField(name);\n        delete this.instances[name];\n        delete this.cachedBind[name];\n      },\n      resetFields: function resetFields(ns) {\n        var _this6 = this;\n        var newFields = this.fieldsStore.resetFields(ns);\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n        if (ns) {\n          var names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(function (name) {\n            return delete _this6.clearedFieldMetaCache[name];\n          });\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n      recoverClearedField: function recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields(_defineProperty({}, name, this.clearedFieldMetaCache[name].field));\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {\n        var _this7 = this;\n        var fieldNames = _ref.fieldNames,\n          action = _ref.action,\n          _ref$options = _ref.options,\n          options = _ref$options === undefined ? {} : _ref$options;\n        var allRules = {};\n        var allValues = {};\n        var allFields = {};\n        var alreadyErrors = {};\n        fields.forEach(function (field) {\n          var name = field.name;\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, {\n                errors: field.errors\n              });\n            }\n            return;\n          }\n          var fieldMeta = _this7.fieldsStore.getFieldMeta(name);\n          var newField = _extends({}, field);\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = _this7.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields);\n        // in case normalize\n        Object.keys(allValues).forEach(function (f) {\n          allValues[f] = _this7.fieldsStore.getFieldValue(f);\n        });\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));\n          return;\n        }\n        var validator = new AsyncValidator(allRules);\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n        validator.validate(allValues, options, function (errors) {\n          var errorsGroup = _extends({}, alreadyErrors);\n          if (errors && errors.length) {\n            errors.forEach(function (e) {\n              var errorFieldName = e.field;\n              var fieldName = errorFieldName;\n\n              // Handle using array validation rule.\n              // ref: https://github.com/ant-design/ant-design/issues/14275\n              Object.keys(allRules).some(function (ruleFieldName) {\n                var rules = allRules[ruleFieldName] || [];\n\n                // Exist if match rule\n                if (ruleFieldName === errorFieldName) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                // Skip if not match array type\n                if (rules.every(function (_ref2) {\n                  var type = _ref2.type;\n                  return type !== 'array';\n                }) || errorFieldName.indexOf(ruleFieldName + '.') !== 0) {\n                  return false;\n                }\n\n                // Exist if match the field name\n                var restPath = errorFieldName.slice(ruleFieldName.length + 1);\n                if (/^\\d+$/.test(restPath)) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n                return false;\n              });\n              var field = get(errorsGroup, fieldName);\n              if (typeof field !== 'object' || Array.isArray(field)) {\n                set(errorsGroup, fieldName, {\n                  errors: []\n                });\n              }\n              var fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n          var expired = [];\n          var nowAllFields = {};\n          Object.keys(allRules).forEach(function (name) {\n            var fieldErrors = get(errorsGroup, name);\n            var nowField = _this7.fieldsStore.getField(name);\n            // avoid concurrency problems\n            if (!eq(nowField.value, allValues[name])) {\n              expired.push({\n                name: name\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n          _this7.setFields(nowAllFields);\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(function (_ref3) {\n                var name = _ref3.name;\n                var fieldErrors = [{\n                  message: name + ' need to revalidate',\n                  field: name\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors\n                });\n              });\n            }\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));\n          }\n        });\n      },\n      validateFields: function validateFields(ns, opt, cb) {\n        var _this8 = this;\n        var pending = new Promise(function (resolve, reject) {\n          var _getParams = getParams(ns, opt, cb),\n            names = _getParams.names,\n            options = _getParams.options;\n          var _getParams2 = getParams(ns, opt, cb),\n            callback = _getParams2.callback;\n          if (!callback || typeof callback === 'function') {\n            var oldCb = callback;\n            callback = function callback(errors, values) {\n              if (oldCb) {\n                oldCb(errors, values);\n              }\n              if (errors) {\n                reject({\n                  errors: errors,\n                  values: values\n                });\n              } else {\n                resolve(values);\n              }\n            };\n          }\n          var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();\n          var fields = fieldNames.filter(function (name) {\n            var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n            return hasRules(fieldMeta.validate);\n          }).map(function (name) {\n            var field = _this8.fieldsStore.getField(name);\n            field.value = _this8.fieldsStore.getFieldValue(name);\n            return field;\n          });\n          if (!fields.length) {\n            callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));\n            return;\n          }\n          if (!('firstFields' in options)) {\n            options.firstFields = fieldNames.filter(function (name) {\n              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n              return !!fieldMeta.validateFirst;\n            });\n          }\n          _this8.validateFieldsInternal(fields, {\n            fieldNames: fieldNames,\n            options: options\n          }, callback);\n        });\n        pending['catch'](function (e) {\n          // eslint-disable-next-line no-console\n          if (console.error && process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.error(e);\n          }\n          return e;\n        });\n        return pending;\n      },\n      isSubmitting: function isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`isSubmitting` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n        return this.state.submitting;\n      },\n      submit: function submit(callback) {\n        var _this9 = this;\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`submit` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n        var fn = function fn() {\n          _this9.setState({\n            submitting: false\n          });\n        };\n        this.setState({\n          submitting: true\n        });\n        callback(fn);\n      },\n      render: function render() {\n        var _props = this.props,\n          wrappedComponentRef = _props.wrappedComponentRef,\n          restProps = _objectWithoutProperties(_props, ['wrappedComponentRef']); // eslint-disable-line\n\n        var formProps = _defineProperty({}, formPropName, this.getForm());\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(false, '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n          }\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n        var props = mapProps.call(this, _extends({}, formProps, restProps));\n        return React.createElement(WrappedComponent, props);\n      }\n    });\n    return argumentContainer(unsafeLifecyclesPolyfill(Form), WrappedComponent);\n  };\n}\nexport default createBaseForm;","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","_extends","_toConsumableArray","React","createReactClass","unsafeLifecyclesPolyfill","AsyncValidator","warning","get","set","eq","createFieldsStore","argumentContainer","identity","normalizeValidateRules","getValidateTriggers","getValueFromEvent","hasRules","getParams","isEmptyObject","flattenArray","DEFAULT_TRIGGER","createBaseForm","option","arguments","length","undefined","mixins","validateMessages","onFieldsChange","onValuesChange","_option$mapProps","mapProps","mapPropsToFields","fieldNameProp","fieldMetaProp","fieldDataProp","_option$formPropName","formPropName","formName","name","withRef","decorate","WrappedComponent","Form","displayName","getInitialState","_this","fields","props","fieldsStore","instances","cachedBind","clearedFieldMetaCache","renderFields","domFields","forEach","key","_fieldsStore","process","env","NODE_ENV","apply","submitting","componentDidMount","cleanUpUselessFields","componentWillReceiveProps","nextProps","updateFields","componentDidUpdate","onCollectCommon","action","args","fieldMeta","getFieldMeta","originalProps","_fieldMeta$originalPr","value","getFieldValue","valuesAll","getAllValues","valuesAllSet","Object","keys","getForm","field","getField","touched","onCollect","name_","_len","Array","_key","_onCollectCommon","validate","setFieldsAsDirty","newField","dirty","setFields","onCollectValidate","_len2","_key2","_onCollectCommon2","validateFieldsInternal","options","firstFields","validateFirst","getCacheBind","fn","cache","oriFn","bind","getFieldDecorator","fieldOption","_this2","getFieldProps","fieldElem","valuePropName","defaultValuePropName","toUpperCase","slice","ref","cloneElement","getFieldValuePropValue","_this3","usersFieldOption","Error","isValidNestedFieldName","trigger","rules","_fieldOption$validate","validateTrigger","initialValue","inputProps","saveRef","validateRules","validateTriggers","indexOf","meta","setFieldMeta","getFieldInstance","getRules","actionRules","filter","item","map","maybeNestedFields","callback","_this4","flattenRegisteredFields","changedFields","reduce","acc","getNestedAllFields","forceUpdate","setFieldsValue","changedValues","fieldsMeta","values","newFields","isRegistered","allValues","_","component","_fieldMeta","preserve","clearField","recoverClearedField","prototype","hasOwnProperty","call","current","_this5","fieldList","getAllFieldsName","removedList","resetFields","ns","_this6","names","isArray","_ref","_this7","fieldNames","_ref$options","allRules","allFields","alreadyErrors","force","errors","validating","f","getFieldsValue","validator","messages","errorsGroup","e","errorFieldName","fieldName","some","ruleFieldName","every","_ref2","type","restPath","test","fieldErrors","concat","push","expired","nowAllFields","nowField","_ref3","message","validateFields","opt","cb","_this8","pending","Promise","resolve","reject","_getParams","_getParams2","oldCb","getValidFieldsFullName","getValidFieldsName","console","error","isSubmitting","state","submit","_this9","setState","render","_props","wrappedComponentRef","restProps","formProps","createElement"],"sources":["/Users/GAMJA/Desktop/nodejs프로젝트/boilerplate-mern-stack-master/client/node_modules/rc-form/es/createBaseForm.js"],"sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n/* eslint-disable react/prefer-es6-class */\n/* eslint-disable prefer-promise-reject-errors */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport unsafeLifecyclesPolyfill from 'rc-util/es/unsafeLifecyclesPolyfill';\nimport AsyncValidator from 'async-validator';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport eq from 'lodash/eq';\nimport createFieldsStore from './createFieldsStore';\nimport { argumentContainer, identity, normalizeValidateRules, getValidateTriggers, getValueFromEvent, hasRules, getParams, isEmptyObject, flattenArray } from './utils';\n\nvar DEFAULT_TRIGGER = 'onChange';\n\nfunction createBaseForm() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mixins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var validateMessages = option.validateMessages,\n      onFieldsChange = option.onFieldsChange,\n      onValuesChange = option.onValuesChange,\n      _option$mapProps = option.mapProps,\n      mapProps = _option$mapProps === undefined ? identity : _option$mapProps,\n      mapPropsToFields = option.mapPropsToFields,\n      fieldNameProp = option.fieldNameProp,\n      fieldMetaProp = option.fieldMetaProp,\n      fieldDataProp = option.fieldDataProp,\n      _option$formPropName = option.formPropName,\n      formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName,\n      formName = option.name,\n      withRef = option.withRef;\n\n\n  return function decorate(WrappedComponent) {\n    var Form = createReactClass({\n      displayName: 'Form',\n\n      mixins: mixins,\n\n      getInitialState: function getInitialState() {\n        var _this = this;\n\n        var fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n\n        this.renderFields = {};\n        this.domFields = {};\n\n        // HACK: https://github.com/ant-design/ant-design/issues/6406\n        ['getFieldsValue', 'getFieldValue', 'setFieldsInitialValue', 'getFieldsError', 'getFieldError', 'isFieldValidating', 'isFieldsValidating', 'isFieldsTouched', 'isFieldTouched'].forEach(function (key) {\n          _this[key] = function () {\n            var _fieldsStore;\n\n            if (process.env.NODE_ENV !== 'production') {\n              warning(false, 'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n            }\n            return (_fieldsStore = _this.fieldsStore)[key].apply(_fieldsStore, arguments);\n          };\n        });\n\n        return {\n          submitting: false\n        };\n      },\n      componentDidMount: function componentDidMount() {\n        this.cleanUpUselessFields();\n      },\n      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n      componentDidUpdate: function componentDidUpdate() {\n        this.cleanUpUselessFields();\n      },\n      onCollectCommon: function onCollectCommon(name, action, args) {\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta[action]) {\n          fieldMeta[action].apply(fieldMeta, _toConsumableArray(args));\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          var _fieldMeta$originalPr;\n\n          (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _toConsumableArray(args));\n        }\n        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _toConsumableArray(args)) : getValueFromEvent.apply(undefined, _toConsumableArray(args));\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          var valuesAll = this.fieldsStore.getAllValues();\n          var valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(function (key) {\n            return set(valuesAllSet, key, valuesAll[key]);\n          });\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), set({}, name, value), valuesAllSet);\n        }\n        var field = this.fieldsStore.getField(name);\n        return { name: name, field: _extends({}, field, { value: value, touched: true }), fieldMeta: fieldMeta };\n      },\n      onCollect: function onCollect(name_, action) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        var _onCollectCommon = this.onCollectCommon(name_, action, args),\n            name = _onCollectCommon.name,\n            field = _onCollectCommon.field,\n            fieldMeta = _onCollectCommon.fieldMeta;\n\n        var validate = fieldMeta.validate;\n\n\n        this.fieldsStore.setFieldsAsDirty();\n\n        var newField = _extends({}, field, {\n          dirty: hasRules(validate)\n        });\n        this.setFields(_defineProperty({}, name, newField));\n      },\n      onCollectValidate: function onCollectValidate(name_, action) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        var _onCollectCommon2 = this.onCollectCommon(name_, action, args),\n            field = _onCollectCommon2.field,\n            fieldMeta = _onCollectCommon2.fieldMeta;\n\n        var newField = _extends({}, field, {\n          dirty: true\n        });\n\n        this.fieldsStore.setFieldsAsDirty();\n\n        this.validateFieldsInternal([newField], {\n          action: action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst\n          }\n        });\n      },\n      getCacheBind: function getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n        var cache = this.cachedBind[name];\n        if (!cache[action] || cache[action].oriFn !== fn) {\n          cache[action] = {\n            fn: fn.bind(this, name, action),\n            oriFn: fn\n          };\n        }\n        return cache[action].fn;\n      },\n      getFieldDecorator: function getFieldDecorator(name, fieldOption) {\n        var _this2 = this;\n\n        var props = this.getFieldProps(name, fieldOption);\n        return function (fieldElem) {\n          // We should put field in record if it is rendered\n          _this2.renderFields[name] = true;\n\n          var fieldMeta = _this2.fieldsStore.getFieldMeta(name);\n          var originalProps = fieldElem.props;\n          if (process.env.NODE_ENV !== 'production') {\n            var valuePropName = fieldMeta.valuePropName;\n            warning(!(valuePropName in originalProps), '`getFieldDecorator` will override `' + valuePropName + '`, ' + ('so please don\\'t set `' + valuePropName + '` directly ') + 'and use `setFieldsValue` to set it.');\n            var defaultValuePropName = 'default' + valuePropName[0].toUpperCase() + valuePropName.slice(1);\n            warning(!(defaultValuePropName in originalProps), '`' + defaultValuePropName + '` is invalid ' + ('for `getFieldDecorator` will set `' + valuePropName + '`,') + ' please use `option.initialValue` instead.');\n          }\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          return React.cloneElement(fieldElem, _extends({}, props, _this2.fieldsStore.getFieldValuePropValue(fieldMeta)));\n        };\n      },\n      getFieldProps: function getFieldProps(name) {\n        var _this3 = this;\n\n        var usersFieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          warning(this.fieldsStore.isValidNestedFieldName(name), 'One field name cannot be part of another, e.g. `a` and `a.b`. Check field: ' + name);\n          warning(!('exclusive' in usersFieldOption), '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.');\n        }\n\n        delete this.clearedFieldMetaCache[name];\n\n        var fieldOption = _extends({\n          name: name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: []\n        }, usersFieldOption);\n\n        var rules = fieldOption.rules,\n            trigger = fieldOption.trigger,\n            _fieldOption$validate = fieldOption.validateTrigger,\n            validateTrigger = _fieldOption$validate === undefined ? trigger : _fieldOption$validate,\n            validate = fieldOption.validate;\n\n\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n\n        var inputProps = _extends({}, this.fieldsStore.getFieldValuePropValue(fieldOption), {\n          ref: this.getCacheBind(name, name + '__ref', this.saveRef)\n        });\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = formName ? formName + '_' + name : name;\n        }\n\n        var validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        var validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach(function (action) {\n          if (inputProps[action]) return;\n          inputProps[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);\n        });\n\n        // make sure that the value will be collect\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n\n        var meta = _extends({}, fieldMeta, fieldOption, {\n          validate: validateRules\n        });\n        this.fieldsStore.setFieldMeta(name, meta);\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        }\n\n        // This field is rendered, record it\n        this.renderFields[name] = true;\n\n        return inputProps;\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        return this.instances[name];\n      },\n      getRules: function getRules(fieldMeta, action) {\n        var actionRules = fieldMeta.validate.filter(function (item) {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map(function (item) {\n          return item.rules;\n        });\n        return flattenArray(actionRules);\n      },\n      setFields: function setFields(maybeNestedFields, callback) {\n        var _this4 = this;\n\n        var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n        if (onFieldsChange) {\n          var changedFields = Object.keys(fields).reduce(function (acc, name) {\n            return set(acc, name, _this4.fieldsStore.getField(name));\n          }, {});\n          onFieldsChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedFields, this.fieldsStore.getNestedAllFields());\n        }\n        this.forceUpdate(callback);\n      },\n      setFieldsValue: function setFieldsValue(changedValues, callback) {\n        var fieldsMeta = this.fieldsStore.fieldsMeta;\n\n        var values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        var newFields = Object.keys(values).reduce(function (acc, name) {\n          var isRegistered = fieldsMeta[name];\n          if (process.env.NODE_ENV !== 'production') {\n            warning(isRegistered, 'Cannot use `setFieldsValue` until ' + 'you use `getFieldDecorator` or `getFieldProps` to register it.');\n          }\n          if (isRegistered) {\n            var value = values[name];\n            acc[name] = {\n              value: value\n            };\n          }\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n        if (onValuesChange) {\n          var allValues = this.fieldsStore.getAllValues();\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedValues, allValues);\n        }\n      },\n      saveRef: function saveRef(name, _, component) {\n        if (!component) {\n          var _fieldMeta = this.fieldsStore.getFieldMeta(name);\n          if (!_fieldMeta.preserve) {\n            // after destroy, delete data\n            this.clearedFieldMetaCache[name] = {\n              field: this.fieldsStore.getField(name),\n              meta: _fieldMeta\n            };\n            this.clearField(name);\n          }\n          delete this.domFields[name];\n          return;\n        }\n        this.domFields[name] = true;\n        this.recoverClearedField(name);\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta) {\n          var ref = fieldMeta.ref;\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error('can not set ref string for ' + name);\n            } else if (typeof ref === 'function') {\n              ref(component);\n            } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n              ref.current = component;\n            }\n          }\n        }\n        this.instances[name] = component;\n      },\n      cleanUpUselessFields: function cleanUpUselessFields() {\n        var _this5 = this;\n\n        var fieldList = this.fieldsStore.getAllFieldsName();\n        var removedList = fieldList.filter(function (field) {\n          var fieldMeta = _this5.fieldsStore.getFieldMeta(field);\n          return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;\n        });\n        if (removedList.length) {\n          removedList.forEach(this.clearField);\n        }\n        this.renderFields = {};\n      },\n      clearField: function clearField(name) {\n        this.fieldsStore.clearField(name);\n        delete this.instances[name];\n        delete this.cachedBind[name];\n      },\n      resetFields: function resetFields(ns) {\n        var _this6 = this;\n\n        var newFields = this.fieldsStore.resetFields(ns);\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n        if (ns) {\n          var names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(function (name) {\n            return delete _this6.clearedFieldMetaCache[name];\n          });\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n      recoverClearedField: function recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields(_defineProperty({}, name, this.clearedFieldMetaCache[name].field));\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {\n        var _this7 = this;\n\n        var fieldNames = _ref.fieldNames,\n            action = _ref.action,\n            _ref$options = _ref.options,\n            options = _ref$options === undefined ? {} : _ref$options;\n\n        var allRules = {};\n        var allValues = {};\n        var allFields = {};\n        var alreadyErrors = {};\n        fields.forEach(function (field) {\n          var name = field.name;\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, { errors: field.errors });\n            }\n            return;\n          }\n          var fieldMeta = _this7.fieldsStore.getFieldMeta(name);\n          var newField = _extends({}, field);\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = _this7.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields);\n        // in case normalize\n        Object.keys(allValues).forEach(function (f) {\n          allValues[f] = _this7.fieldsStore.getFieldValue(f);\n        });\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));\n          return;\n        }\n        var validator = new AsyncValidator(allRules);\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n        validator.validate(allValues, options, function (errors) {\n          var errorsGroup = _extends({}, alreadyErrors);\n          if (errors && errors.length) {\n            errors.forEach(function (e) {\n              var errorFieldName = e.field;\n              var fieldName = errorFieldName;\n\n              // Handle using array validation rule.\n              // ref: https://github.com/ant-design/ant-design/issues/14275\n              Object.keys(allRules).some(function (ruleFieldName) {\n                var rules = allRules[ruleFieldName] || [];\n\n                // Exist if match rule\n                if (ruleFieldName === errorFieldName) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                // Skip if not match array type\n                if (rules.every(function (_ref2) {\n                  var type = _ref2.type;\n                  return type !== 'array';\n                }) || errorFieldName.indexOf(ruleFieldName + '.') !== 0) {\n                  return false;\n                }\n\n                // Exist if match the field name\n                var restPath = errorFieldName.slice(ruleFieldName.length + 1);\n                if (/^\\d+$/.test(restPath)) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                return false;\n              });\n\n              var field = get(errorsGroup, fieldName);\n              if (typeof field !== 'object' || Array.isArray(field)) {\n                set(errorsGroup, fieldName, { errors: [] });\n              }\n              var fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n          var expired = [];\n          var nowAllFields = {};\n          Object.keys(allRules).forEach(function (name) {\n            var fieldErrors = get(errorsGroup, name);\n            var nowField = _this7.fieldsStore.getField(name);\n            // avoid concurrency problems\n            if (!eq(nowField.value, allValues[name])) {\n              expired.push({\n                name: name\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n          _this7.setFields(nowAllFields);\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(function (_ref3) {\n                var name = _ref3.name;\n\n                var fieldErrors = [{\n                  message: name + ' need to revalidate',\n                  field: name\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors\n                });\n              });\n            }\n\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));\n          }\n        });\n      },\n      validateFields: function validateFields(ns, opt, cb) {\n        var _this8 = this;\n\n        var pending = new Promise(function (resolve, reject) {\n          var _getParams = getParams(ns, opt, cb),\n              names = _getParams.names,\n              options = _getParams.options;\n\n          var _getParams2 = getParams(ns, opt, cb),\n              callback = _getParams2.callback;\n\n          if (!callback || typeof callback === 'function') {\n            var oldCb = callback;\n            callback = function callback(errors, values) {\n              if (oldCb) {\n                oldCb(errors, values);\n              }\n              if (errors) {\n                reject({ errors: errors, values: values });\n              } else {\n                resolve(values);\n              }\n            };\n          }\n          var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();\n          var fields = fieldNames.filter(function (name) {\n            var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n            return hasRules(fieldMeta.validate);\n          }).map(function (name) {\n            var field = _this8.fieldsStore.getField(name);\n            field.value = _this8.fieldsStore.getFieldValue(name);\n            return field;\n          });\n          if (!fields.length) {\n            callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));\n            return;\n          }\n          if (!('firstFields' in options)) {\n            options.firstFields = fieldNames.filter(function (name) {\n              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n              return !!fieldMeta.validateFirst;\n            });\n          }\n          _this8.validateFieldsInternal(fields, {\n            fieldNames: fieldNames,\n            options: options\n          }, callback);\n        });\n        pending['catch'](function (e) {\n          // eslint-disable-next-line no-console\n          if (console.error && process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.error(e);\n          }\n          return e;\n        });\n        return pending;\n      },\n      isSubmitting: function isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`isSubmitting` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n        return this.state.submitting;\n      },\n      submit: function submit(callback) {\n        var _this9 = this;\n\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`submit` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n        var fn = function fn() {\n          _this9.setState({\n            submitting: false\n          });\n        };\n        this.setState({\n          submitting: true\n        });\n        callback(fn);\n      },\n      render: function render() {\n        var _props = this.props,\n            wrappedComponentRef = _props.wrappedComponentRef,\n            restProps = _objectWithoutProperties(_props, ['wrappedComponentRef']); // eslint-disable-line\n\n\n        var formProps = _defineProperty({}, formPropName, this.getForm());\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(false, '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n          }\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n        var props = mapProps.call(this, _extends({}, formProps, restProps));\n        return React.createElement(WrappedComponent, props);\n      }\n    });\n\n    return argumentContainer(unsafeLifecyclesPolyfill(Form), WrappedComponent);\n  };\n}\n\nexport default createBaseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}